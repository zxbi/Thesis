title(main=title)
title(ylab = "Daily Proportion of Classified Tweets", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=min(x$date), to=as.Date(max(x$date)), by=30)
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
}
#Plot
pdf("figures/figure_A33.pdf", height=7, width=11)
mapply(plot_fun, x = random_list, col = color, title=titlenames_classified, predicted_values=predicted_values_q)
dev.off()
############
#Figure A34#
############
#AR1 Model (interrupted time series analysis)
ar1<-lapply(random_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
# Generate predicted values based on the models in order to create a plot
predicted_values<-lapply(ar1, function(x){
predict(x)
})
#Plot Function
plot_fun= function(x, col, title, predicted_values){
par(mar = c(7,7,7,5) + 0.1)
plot.new()
plot(x$norm_upd_hate,type="n", yaxt="n", ylab="", xaxt="n", xlab="")
points(x$norm_upd_hate,cex=0.5, pch=16)
lines(predicted_values[1:507],  col=col, lwd=2.5)
lines(predicted_values[508:730],x=508:730, col=col, lwd=2.5)
axis(side=2, las=1, font.lab=2)
title(main=title)
title(ylab = "Daily Proportion of Unique Users", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=as.Date("2015/6/17"), to=as.Date("2017/6/15"), by="30 days")
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
}
#Plot
pdf("figures/figure_A34.pdf", height=7, width=11)
mapply(plot_fun, x = random_list, col = color, title=titlenames_unique, predicted_values=predicted_values)
dev.off()
###########
#Figure A35#
###########
#AR1 Model (interrupted time series analysis with quadratic term)
ar1_q<-lapply(random_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
# Generate predicted values based on the models in order to create a plot
predicted_values_q<-lapply(ar1_q, function(x){
predict(x)
})
#Plot Function
plot_fun_q= function(x, col, title, predicted_values){
par(mar = c(7,7,7,5) + 0.1)
plot.new()
plot(x$norm_upd_hate,type="n", yaxt="n", ylab="", xaxt="n", xlab="")
points(x$norm_upd_hate,cex=0.5, pch=16)
lines(predicted_values_q[1:507],  col=col, lwd=2.5)
lines(predicted_values_q[508:730],x=508:730, col=col, lwd=2.5)
axis(side=2, las=1, font.lab=2)
title(main=title)
title(ylab = "Daily Proportion of Unique Users Tweets", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=min(x$date), to=as.Date(max(x$date)), by=30)
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
}
#Plot
pdf("figures/figure_A35.pdf", height=7, width=11)
mapply(plot_fun, x = random_list, col = color, title=titlenames_unique, predicted_values=predicted_values_q)
dev.off()
############
#Figure A36#
############
ar1<-gls(norm_hate ~ date_num + election + slope_change, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
predicted_values<-predict(ar1)
predicted_values_q<-predict(ar1_q)
#Top Plot
pdf("figures/figure_A36_top.pdf", height=7, width=11)
plot.new()
par(mar = c(7,7,7,5) + 0.1)
plot(random_data_agg$norm_hate, type="n", yaxt="n", ylab="", xaxt="n", xlab="")
points(random_data_agg$norm_hate,cex=0.5, pch=16)
lines(predicted_values[1:507],  col="black", lwd=2.5)
lines(predicted_values[508:730],x=508:730, col="black", lwd=2.5)
axis(side=2, las=1, font.lab=2)
title(main="Effect of 2016 Election on Proportion of Classified Hatespeech Tweets (ITSA)")
title(ylab = "Daily Proportion of Classified Hatespeech Tweets", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=as.Date("2015/6/17"), to=as.Date("2017/6/15"), by="30 days")
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
dev.off()
pdf("figures/figure_A36_bottom.pdf", height=7, width=11)
plot.new()
par(mar = c(7,7,7,5) + 0.1)
plot(random_data_agg$norm_hate, type="n", yaxt="n", ylab="", xaxt="n", xlab="")
points(random_data_agg$norm_hate,cex=0.5, pch=16)
lines(predicted_values_q[1:507],  col="black", lwd=2.5)
lines(predicted_values_q[508:730],x=508:730, col="black", lwd=2.5)
axis(side=2, las=1, font.lab=2)
title(main="Effect of 2016 Election on Proportion of Classified Hate Speech Tweets (ITSA)")
title(ylab = "Daily Proportion of Classified Hate Speech Tweets", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=as.Date("2015/6/17"), to=as.Date("2017/6/15"), by="30 days")
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
dev.off()
############
#Figure A37#
############
ar1<-gls(norm_upd_hate ~ date_num + election + slope_change, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_upd_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
predicted_values<-predict(ar1)
predicted_values_q<-predict(ar1_q)
#Top Plot
pdf("figures/figure_A37_top.pdf", height=7, width=11)
plot.new()
par(mar = c(7,7,7,5) + 0.1)
plot(random_data_agg$norm_upd_hate, type="n", yaxt="n", ylab="", xaxt="n", xlab="")
points(random_data_agg$norm_upd_hate,cex=0.5, pch=16)
lines(predicted_values[1:507],  col="black", lwd=2.5)
lines(predicted_values[508:730],x=508:730, col="black", lwd=2.5)
axis(side=2, las=1, font.lab=2)
title(main="Effect of 2016 Election on Proportion of Unique Users Tweeting Hatespeech (ITSA)")
title(ylab = "Daily Proportion of Unique Users", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=as.Date("2015/6/17"), to=as.Date("2017/6/15"), by="30 days")
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
dev.off()
pdf("figures/figure_A37_bottom.pdf", height=7, width=11)
plot.new()
par(mar = c(7,7,7,5) + 0.1)
plot(random_data_agg$norm_upd_hate, type="n", yaxt="n", ylab="", xaxt="n", xlab="")
points(random_data_agg$norm_upd_hate,cex=0.5, pch=16)
lines(predicted_values_q[1:507],  col="black", lwd=2.5)
lines(predicted_values_q[509:730],x=509:730, col="black", lwd=2.5)
axis(side=2, las=1, font.lab=2)
title(main="Effect of 2016 Election on Proportion of Unique Users Tweeting Hatespeech (ITSA)")
title(ylab = "Daily Proportion of Unique Users", line=4.5)
title(xlab="Date", cex.lab = 1, line=6)
ticks <- seq(0, 730, by=30)
lbl <- seq(from=as.Date("2015/6/17"), to=as.Date("2017/6/15"), by="30 days")
axis(side=1, at=ticks, labels=lbl, las=2, cex=.75, font.lab=2)
abline(v=508, lty="dashed", col='black', lwd=2)
mtext("Election Day", side=3,  at=508, cex=.85)
dev.off()
########################
#DESCRIPTIVE STATISTICS#
#########################
##############
#Tables A1-A3#
##############
#Clinton (A1)
vars<-c("hillary_tpd", "hillary_upd", "freq", "freq_hate", "freq_upd_hate", "freq_rt_hate")
des_stat<-clinton_list_combined[vars]
des_stat<-describeBy(des_stat, group=clinton_list_combined$group, mat=TRUE)
des_stat<-des_stat[c("group1", "mean", "median", "sd", "min", "max", "n")]
des_stat$group1<-gsub("_|.csv", " ", des_stat$group1)
des_stat$group1<-stri_trans_totitle(des_stat$group1)
des_stat<-des_stat[-(c(2:9, 11:18)),]
rownames(des_stat)<-gsub("freq_", "", rownames(des_stat))
rownames(des_stat)<-gsub("freq|tpd", "Tweets Per Day", rownames(des_stat))
rownames(des_stat)<-gsub("upd", "Unique Users Per Day", rownames(des_stat))
rownames(des_stat)<-gsub("_hate", " (Classified) ", rownames(des_stat))
rownames(des_stat)<-gsub("_", " ", rownames(des_stat))
rownames(des_stat)<-gsub("hillary", "Clinton", rownames(des_stat))
rownames(des_stat)<-gsub("rt", "Retweets", rownames(des_stat))
rownames(des_stat)<-gsub("hate", "Tweets Per Day (Classified)", rownames(des_stat))
rownames(des_stat)<-gsub("norm", "Normalized", rownames(des_stat))
latex_table_clinton<-xtable(des_stat, size=scriptsize)
print(latex_table_clinton)
#Trump (A2)
vars<-c("trump_tpd", "trump_upd", "freq", "freq_hate", "freq_upd_hate", "freq_rt_hate")
des_stat<-trump_list_combined[vars]
des_stat<-describeBy(des_stat, group=trump_list_combined$group, mat=TRUE)
des_stat<-des_stat[c("group1", "mean", "median", "sd", "min", "max", "n")]
des_stat$group1<-gsub("_|.csv", " ", des_stat$group1)
des_stat$group1<-stri_trans_totitle(des_stat$group1)
des_stat<-des_stat[-(c(2:9, 11:18)),]
rownames(des_stat)<-gsub("freq_", "", rownames(des_stat))
rownames(des_stat)<-gsub("freq|tpd", "Tweets Per Day", rownames(des_stat))
rownames(des_stat)<-gsub("upd", "Unique Users Per Day", rownames(des_stat))
rownames(des_stat)<-gsub("_hate", " (Classified) ", rownames(des_stat))
rownames(des_stat)<-gsub("_", " ", rownames(des_stat))
rownames(des_stat)<-gsub("trump", "Trump", rownames(des_stat))
rownames(des_stat)<-gsub("rt", "Retweets", rownames(des_stat))
rownames(des_stat)<-gsub("hate", "Tweets Per Day (Classified)", rownames(des_stat))
rownames(des_stat)<-gsub("norm", "Normalized", rownames(des_stat))
latex_table_trump<-xtable(des_stat, size=scriptsize)
print(latex_table_trump)
#Random Sample (A3)
vars<-c("tweet_count", "unique_users", "freq", "freq_hate", "freq_upd_hate", "freq_rt_hate")
des_stat<-random_list_combined[vars]
des_stat<-describeBy(des_stat, group=random_list_combined$group, mat=TRUE)
des_stat<-des_stat[c("group1", "mean", "median", "sd", "min", "max", "n")]
des_stat$group1<-gsub("_|.csv", " ", des_stat$group1)
des_stat$group1<-stri_trans_totitle(des_stat$group1)
des_stat<-des_stat[-(c(2:9, 11:18)),]
rownames(des_stat)<-gsub("freq_", "", rownames(des_stat))
rownames(des_stat)<-gsub("freq|tpd", "Tweets Per Day", rownames(des_stat))
rownames(des_stat)<-gsub("upd", "Unique Users Per Day", rownames(des_stat))
rownames(des_stat)<-gsub("_hate", " (Classified) ", rownames(des_stat))
rownames(des_stat)<-gsub("_", " ", rownames(des_stat))
rownames(des_stat)<-gsub("random", "random", rownames(des_stat))
rownames(des_stat)<-gsub("rt", "Retweets", rownames(des_stat))
rownames(des_stat)<-gsub("hate", "Tweets Per Day (Classified)", rownames(des_stat))
rownames(des_stat)<-gsub("norm", "Normalized", rownames(des_stat))
latex_table_random<-xtable(des_stat, size=scriptsize)
print(latex_table_random)
###################
#Top Dates (A4-A6)#
###################
#Clinton (A4)
top_dates_combined_clinton<-head(clinton_data_agg[order(-clinton_data_agg$norm_hate),], 10)
top_dates_combined_clinton<-top_dates_combined_clinton[c("date", "norm_hate")]
top_dates_combined_clinton$date<-as.character(top_dates_combined_clinton$date)
latex_top_dates_clinton<-xtable(top_dates_combined_clinton, row.names=F, digits=4)
print(latex_top_dates_clinton, include.rownames=FALSE)
#Trump (A5)
top_dates_combined_trump<-head(trump_data_agg[order(-trump_data_agg$norm_hate),], 10)
top_dates_combined_trump<-top_dates_combined_trump[c("date", "norm_hate")]
top_dates_combined_trump$date<-as.character(top_dates_combined_trump$date)
latex_top_dates_trump<-xtable(top_dates_combined_trump, row.names=F, digits=4)
print(latex_top_dates_trump, include.rownames=FALSE)
#Random (A6)
top_dates_combined_random<-head(random_data_agg[order(-random_data_agg$norm_hate),], 10)
top_dates_combined_random<-top_dates_combined_random[c("date", "norm_hate")]
top_dates_combined_random$date<-as.character(top_dates_combined_random$date)
latex_top_dates_random<-xtable(top_dates_combined_random, row.names=F, digits=4)
print(latex_top_dates_random, include.rownames=FALSE)
####################
#Regression Tables#
####################
###########
#Table A7#
###########
#run model on each disaggregated datasets
ar1<-lapply(clinton_list, function(x){
gls(norm_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
#extract coefficients for table
ar1<-lapply(ar1, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1$anti_asian_clinton.csv, ar1$anti_black_clinton.csv, ar1$anti_immigrant_clinton.csv, ar1$anti_latino_clinton.csv, ar1$anti_muslim_clinton.csv, ar1$anti_semitic_clinton.csv, ar1$homophobic_clinton.csv, ar1$misogynistic_clinton.csv, ar1$white_nationalist_clinton.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hatespeech (Clinton Data)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A8#
###########
#run model on each disaggregated datasets
ar1_q<-lapply(clinton_list, function(x){
gls(norm_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
#extract coefficients for table
ar1_q<-lapply(ar1_q, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1_q$anti_asian_clinton.csv, ar1_q$anti_black_clinton.csv, ar1_q$anti_immigrant_clinton.csv, ar1_q$anti_latino_clinton.csv, ar1_q$anti_muslim_clinton.csv, ar1_q$anti_semitic_clinton.csv, ar1_q$homophobic_clinton.csv, ar1_q$misogynistic_clinton.csv, ar1_q$white_nationalist_clinton.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Elelction Trend$^2$", "Election Slope Change$^2$"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hate Speech (Clinton Dataset)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A9#
###########
#run models on aggregated dataset
ar1<-gls(norm_hate ~ date_num + election + slope_change, data=clinton_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=clinton_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
#extract coefficients for table
ar1<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
ar1_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#print table for latex
texreg(c(ar1, ar1_q), digits=9, custom.coef.names = c("Baseline", "Pre-Election Trend",  "Election Level Change", "Election Slope Change", "Pre-Election Trend^2", "Election Slope Change^2"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hatespeech (Clinton Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A10#
###########
#run model on each disaggregated datasets
ar1<-lapply(clinton_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
#extract coefficients for table
ar1<-lapply(ar1, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1$anti_asian_clinton.csv, ar1$anti_black_clinton.csv, ar1$anti_immigrant_clinton.csv, ar1$anti_latino_clinton.csv, ar1$anti_muslim_clinton.csv, ar1$anti_semitic_clinton.csv, ar1$homophobic_clinton.csv, ar1$misogynistic_clinton.csv, ar1$white_nationalist_clinton.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hatespeech (Clinton Data)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A11#
###########
#run model on each disaggregated datasets
ar1_q<-lapply(clinton_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
#extract coefficients for table
ar1_q<-lapply(ar1_q, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1_q$anti_asian_clinton.csv, ar1_q$anti_black_clinton.csv, ar1_q$anti_immigrant_clinton.csv, ar1_q$anti_latino_clinton.csv, ar1_q$anti_muslim_clinton.csv, ar1_q$anti_semitic_clinton.csv, ar1_q$homophobic_clinton.csv, ar1_q$misogynistic_clinton.csv, ar1_q$white_nationalist_clinton.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Elelction Trend$^2$", "Election Slope Change$^2$"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hate Speech (Clinton Dataset)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A12#
###########
#run models on aggregated dataset
ar1<-gls(norm_upd_hate ~ date_num + election + slope_change, data=clinton_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_upd_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=clinton_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
#extract coefficients for table
ar1<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
ar1_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#print table for latex
texreg(c(ar1, ar1_q), digits=9, custom.coef.names = c("Baseline", "Pre-Election Trend",  "Election Level Change", "Election Slope Change", "Pre-Election Trend^2", "Election Slope Change^2"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hatespeech (Clinton Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A13#
###########
#run model on each disaggregated datasets
ar1<-lapply(trump_list, function(x){
gls(norm_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
#extract coefficients for table
ar1<-lapply(ar1, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1$anti_asian_trump.csv, ar1$anti_black_trump.csv, ar1$anti_immigrant_trump.csv, ar1$anti_latino_trump.csv, ar1$anti_muslim_trump.csv, ar1$anti_semitic_trump.csv, ar1$homophobic_trump.csv, ar1$misogynistic_trump.csv, ar1$white_nationalist_trump.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hatespeech (Trump Data)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A14#
###########
#run model on each disaggregated datasets
ar1_q<-lapply(trump_list, function(x){
gls(norm_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
#extract coefficients for table
ar1_q<-lapply(ar1_q, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1_q$anti_asian_trump.csv, ar1_q$anti_black_trump.csv, ar1_q$anti_immigrant_trump.csv, ar1_q$anti_latino_trump.csv, ar1_q$anti_muslim_trump.csv, ar1_q$anti_semitic_trump.csv, ar1_q$homophobic_trump.csv, ar1_q$misogynistic_trump.csv, ar1_q$white_nationalist_trump.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Elelction Trend$^2$", "Election Slope Change$^2$"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hate Speech (Trump Dataset)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A15#
###########
#run models on aggregated dataset
ar1<-gls(norm_hate ~ date_num + election + slope_change, data=trump_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=trump_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
#extract coefficients for table
ar1<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
ar1_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#print table for latex
texreg(c(ar1, ar1_q), digits=9, custom.coef.names = c("Baseline", "Pre-Election Trend",  "Election Level Change", "Election Slope Change", "Pre-Election Trend^2", "Election Slope Change^2"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hatespeech (Trump Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A16#
###########
#run model on each disaggregated datasets
ar1<-lapply(trump_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
#extract coefficients for table
ar1<-lapply(ar1, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1$anti_asian_trump.csv, ar1$anti_black_trump.csv, ar1$anti_immigrant_trump.csv, ar1$anti_latino_trump.csv, ar1$anti_muslim_trump.csv, ar1$anti_semitic_trump.csv, ar1$homophobic_trump.csv, ar1$misogynistic_trump.csv, ar1$white_nationalist_trump.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hatespeech (Trump Data)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A17#
###########
#run model on each disaggregated datasets
ar1_q<-lapply(trump_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
#extract coefficients for table
ar1_q<-lapply(ar1_q, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1_q$anti_asian_trump.csv, ar1_q$anti_black_trump.csv, ar1_q$anti_immigrant_trump.csv, ar1_q$anti_latino_trump.csv, ar1_q$anti_muslim_trump.csv, ar1_q$anti_semitic_trump.csv, ar1_q$homophobic_trump.csv, ar1_q$misogynistic_trump.csv, ar1_q$white_nationalist_trump.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Elelction Trend$^2$", "Election Slope Change$^2$"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hate Speech (Trump Dataset)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A18#
###########
#run models on aggregated dataset
ar1<-gls(norm_upd_hate ~ date_num + election + slope_change, data=trump_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_upd_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=trump_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
#extract coefficients for table
ar1<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
ar1_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#print table for latex
texreg(c(ar1, ar1_q), digits=9, custom.coef.names = c("Baseline", "Pre-Election Trend",  "Election Level Change", "Election Slope Change", "Pre-Election Trend^2", "Election Slope Change^2"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hatespeech (Trump Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A19#
###########
#run model on each disaggregated datasets
ar1<-lapply(random_list, function(x){
gls(norm_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
#extract coefficients for table
ar1<-lapply(ar1, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1$anti_asian_random.csv, ar1$anti_black_random.csv, ar1$anti_immigrant_random.csv, ar1$anti_latino_random.csv, ar1$anti_muslim_random.csv, ar1$anti_semitic_random.csv, ar1$homophobic_random.csv, ar1$misogynistic_random.csv, ar1$white_nationalist_random.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hatespeech (Random Sample Data)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A20#
###########
#run model on each disaggregated datasets
ar1_q<-lapply(random_list, function(x){
gls(norm_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
#extract coefficients for table
ar1_q<-lapply(ar1_q, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1_q$anti_asian_random.csv, ar1_q$anti_black_random.csv, ar1_q$anti_immigrant_random.csv, ar1_q$anti_latino_random.csv, ar1_q$anti_muslim_random.csv, ar1_q$anti_semitic_random.csv, ar1_q$homophobic_random.csv, ar1_q$misogynistic_random.csv, ar1_q$white_nationalist_random.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Elelction Trend$^2$", "Election Slope Change$^2$"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hate Speech (Random Sample Dataset)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A21#
###########
#run models on aggregated dataset
ar1<-gls(norm_hate ~ date_num + election + slope_change, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
#extract coefficients for table
ar1<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
ar1_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#print table for latex
texreg(c(ar1, ar1_q), digits=9, custom.coef.names = c("Baseline", "Pre-Election Trend",  "Election Level Change", "Election Slope Change", "Pre-Election Trend^2", "Election Slope Change^2"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Tweets Containing Hatespeech (Random Sample Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A22#
###########
#run model on each disaggregated datasets
ar1<-lapply(random_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))})
#extract coefficients for table
ar1<-lapply(ar1, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1$anti_asian_random.csv, ar1$anti_black_random.csv, ar1$anti_immigrant_random.csv, ar1$anti_latino_random.csv, ar1$anti_muslim_random.csv, ar1$anti_semitic_random.csv, ar1$homophobic_random.csv, ar1$misogynistic_random.csv, ar1$white_nationalist_random.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hatespeech (Random Sample Data)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A23#
###########
#run model on each disaggregated datasets
ar1_q<-lapply(random_list, function(x){
gls(norm_upd_hate ~ date_num + election + slope_change + date_num2 + slope_change2, data=x, na.action = na.omit, correlation = corAR1(form = ~ 1))
})
#extract coefficients for table
ar1_q<-lapply(ar1_q, function(x){
extract(x, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
})
#print table for latex
texreg(c(ar1_q$anti_asian_random.csv, ar1_q$anti_black_random.csv, ar1_q$anti_immigrant_random.csv, ar1_q$anti_latino_random.csv, ar1_q$anti_muslim_random.csv, ar1_q$anti_semitic_random.csv, ar1_q$homophobic_random.csv, ar1_q$misogynistic_random.csv, ar1_q$white_nationalist_random.csv), digits=12, ci.force=FALSE, custom.model.names=c("Anti-Asian", "Anti-Black", "Anti-Immigrant", "Anti-Latino", "Anti-Muslim", "Anti-Semitic", "Homophobic", "Misogynistic", "White Nationalist"), custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Elelction Trend$^2$", "Election Slope Change$^2$"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hate Speech (Random Sample Dataset)", stars = c(0.001,0.01, 0.05), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A24#
###########
#run models on aggregated dataset
ar1<-gls(norm_upd_hate ~ date_num + election + slope_change, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
ar1_q<-gls(norm_upd_hate ~ date_num  + election + slope_change + date_num2 + slope_change2, data=random_data_agg, na.action = na.omit, correlation = corAR1(form = ~ 1))
#extract coefficients for table
ar1<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
ar1_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#print table for latex
texreg(c(ar1, ar1_q), digits=9, custom.coef.names = c("Baseline", "Pre-Election Trend",  "Election Level Change", "Election Slope Change", "Pre-Election Trend^2", "Election Slope Change^2"), caption.above=TRUE, caption="Effect of Election on Daily Proportion of Unique Users Tweeting Hatespeech (Random Sample Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
library(readr)
library(texreg)
library(ggplot2)
library(nlme)
library(scales)
data<-read_csv("data/non_dictionary_data.csv")
pdf("figures/figure_7a.pdf", height=7, width=11)
ggplot(data, aes(day, clinton, group=election)) +  geom_line() + geom_smooth(method="loess", se=TRUE, colour="blue", fill="blue")+  geom_vline(xintercept =as.numeric(as.Date("2016-11-08")), linetype=2) + labs(y="Daily Probability Tweets are Classified as Alt-Right", x = "Date")+ annotate("text", label="Election Day", x=as.Date("2016-11-08", origin = '2015-06-15'), y = Inf, vjust = 2, hjust=1, size=6) + scale_x_date(labels=date_format("%m-%Y"), breaks=seq(as.Date("2015-06-01"), as.Date("2017-06-15"), by="4 months")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  axis.text.y = element_text(size = rel(1.2)), axis.text.x = element_text( size = rel(1.2)), axis.line.x = element_line(color="black", size = .5), axis.line.y = element_line(color="black", size = .5), axis.title = element_text(size=16))+scale_y_continuous(limits=c(0, max(data$clinton)))
dev.off()
pdf("figures/figure_7b.pdf", height=7, width=11)
ggplot(data, aes(day, trump, group=election)) +  geom_line() + geom_smooth(method="loess", se=TRUE, colour="red", fill="red")+  geom_vline(xintercept =as.numeric(as.Date("2016-11-08")), linetype=2) + labs(y="Daily Probability Tweets are Classified as Alt-Right", x = "Date")+ annotate("text", label="Election Day", x=as.Date("2016-11-08", origin = '2015-06-15'), y = Inf, vjust = 2, hjust=1, size=6) + scale_x_date(labels=date_format("%m-%Y"), breaks=seq(as.Date("2015-06-01"), as.Date("2017-06-15"), by="4 months")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  axis.text.y = element_text(size = rel(1.2)), axis.text.x = element_text( size = rel(1.2)), axis.line.x = element_line(color="black", size = .5), axis.line.y = element_line(color="black", size = .5), axis.title = element_text(size=16))+scale_y_continuous(limits=c(0, max(data$trump)))
dev.off()
pdf("figures/figure_7c.pdf", height=7, width=11)
ggplot(na.omit(data), aes(day, random, group=election)) +  geom_line() + geom_smooth(method="loess", se=TRUE, colour="black", fill="black")+  geom_vline(xintercept =as.numeric(as.Date("2016-11-08")), linetype=2) + labs(y="Daily Probability Tweets are Classified as Alt-Right", x = "Date")+ annotate("text", label="Election Day", x=as.Date("2016-11-08", origin = '2015-06-15'), y = Inf, vjust = 2, hjust=1, size=6) + scale_x_date(labels=date_format("%m-%Y"), breaks=seq(as.Date("2015-06-01"), as.Date("2017-06-15"), by="4 months")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  axis.text.y = element_text(size = rel(1.2)), axis.text.x = element_text( size = rel(1.2)), axis.line.x = element_line(color="black", size = .5), axis.line.y = element_line(color="black", size = .5), axis.title = element_text(size=16))+scale_y_continuous(limits=c(0, max(na.omit(data$random))))
dev.off()
###########
#Table A28#
###########
ar1<-gls(clinton ~ date_num + election + slope_change, data=data, correlation = corAR1(form = ~ 1))
ar1_total<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#quadratic model
ar1_q<-gls(clinton ~ date_num +date_num2 + election + slope_change + slope_change2, data=data, correlation = corAR1(form = ~ 1))
ar1_total_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#output for latex
texreg(c(ar1_total, ar1_total_q), digits=8, ci.force=FALSE, custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Election Trend ^2", "Election Slope Change ^2"), caption.above=TRUE, caption="Effect of Election on Alt-Right Reddit Similarity (Clinton Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A29#
###########
#linear model
ar1<-gls(trump ~ date_num + election + slope_change, data=data, correlation = corAR1(form = ~ 1))
ar1_total<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#quadratic model
ar1_q<-gls(trump ~ date_num +date_num2 + election + slope_change + slope_change2, data=data, correlation = corAR1(form = ~ 1))
ar1_total_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#output for latex
texreg(c(ar1_total, ar1_total_q), digits=8, ci.force=FALSE, custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Election Trend ^2", "Election Slope Change ^2"), caption.above=TRUE, caption="Effect of Election on Alt-Right Reddit Similarity (Trump Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
###########
#Table A30#
###########
#linear model
ar1<-gls(random ~ date_num + election + slope_change, data=na.omit(data), correlation = corAR1(form = ~ 1))
ar1_total<-extract(ar1, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#quadratic model
ar1_q<-gls(random ~ date_num +date_num2 + election + slope_change + slope_change2, data=na.omit(data), correlation = corAR1(form = ~ 1))
ar1_total_q<-extract(ar1_q, include.aic = TRUE, include.bic = TRUE, include.loglik = TRUE,  include.nobs = TRUE)
#output for latex
texreg(c(ar1_total, ar1_total_q), digits=8, ci.force=FALSE, custom.coef.names = c("Baseline", "Pre-Election Trend", "Election Level Change", "Election Slope Change", "Pre-Election Trend ^2", "Election Slope Change ^2"), caption.above=TRUE, caption="Effect of Election on Alt-Right Reddit Similarity (Random Sample Data)", stars = c(0.001,0.01, 0.05, 0.1), custom.gof.names = NULL, custom.coef.map = NULL)
